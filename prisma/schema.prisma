
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id    String  @unique @default(uuid())
  email String  @unique
  name  String
  hashedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model TourInfo {
  id String  @unique @default(uuid())
  title String @unique
  location String
  price Float
  rate Float
  date DateTime
  
  ageGroup AgeGroup? @relation("TourInfoToAgeGroup")
  
  rateAmount Int
  duration Duration? @relation("TourInfoToDuration")
  imageUrl String
  isFeatured String?
  specials Special[] @relation("TourInfoToSpecial")
  tags Tag[] @relation("TourInfoToTag")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
} 

model TourGuide {
  id String  @unique @default(uuid())
  fullname String @unique
  about String
  journey String
  facebookLink String
  instagramLink String
  twitterLink String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Email {
  id String  @unique @default(uuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Special {
  id String  @unique @default(uuid())
  name String @unique
  tourInfoId String 
  tourInfo TourInfo @relation("TourInfoToSpecial", fields: [tourInfoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  @@index([tourInfoId])
}

model Tag {
  id String  @unique @default(uuid())
  name String @unique
  tourInfoId String 
  tourInfo TourInfo @relation("TourInfoToTag", fields: [tourInfoId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  @@index([tourInfoId])
}

model AgeGroup {
  id String  @unique @default(uuid())
  name String 
  tourInfoId String @unique
  tourInfo TourInfo @relation("TourInfoToAgeGroup", fields: [tourInfoId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  @@index([tourInfoId])
}


model Duration {
  id String @unique @default(uuid())
  name String 
  tourInfoId String @unique
  tourInfo TourInfo @relation("TourInfoToDuration", fields: [tourInfoId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  @@index([tourInfoId])
}