generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @unique @default(uuid())
  email          String   @unique
  name           String
  hashedPassword String
  avatarUrl      String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt()

  // Relations
  reviews         Review[]         @relation("UserToReview")
  registeredTours RegisteredTour[] @relation("UserToRegisteredTour")
  likes           Like[]           @relation("UserToLike")

  @@id([id])
}

model TourInfo {
  id            String   @unique @default(uuid())
  title         String   @unique
  location      String
  price         Float
  rate          Float
  date          DateTime
  rateAmount    Int
  isFeatured    Boolean?
  description   String
  activity      String
  physical      String
  groupSize     Int
  season        String
  inclusionText String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()

  // Relations
  images          Image[]          @relation("TourInfoToImage")
  ageGroup        AgeGroup?        @relation("TourInfoToAgeGroup")
  duration        Duration?        @relation("TourInfoToDuration")
  specials        Special[]        @relation("TourInfoToSpecial")
  tags            Tag[]            @relation("TourInfoToTag")
  likes           Like[]           @relation("TourInfoToLike")
  registeredTours RegisteredTour[] @relation("TourInfoToRegisteredTour")
  itineraries     Itinerary[]      @relation("TourInfoToItinerary")
  inclusions      Inclusion[]      @relation("TourInfoToInclusion")
  reviews         Review[]         @relation("TourInfoToReview")
  faqs            Faq[]            @relation("TourInfoToFaq")

  @@id([id])
}

model RegisteredTour {
  id         String   @unique @default(uuid())
  date       DateTime
  travelers  String
  transports String
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()

  // Relations
  userId     String
  user       User     @relation("UserToRegisteredTour", fields: [userId], references: [id])
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToRegisteredTour", fields: [tourInfoId], references: [id])

  @@index([userId])
  @@index([tourInfoId])
}

model AgeGroup {
  id        String   @unique @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String   @unique
  tourInfo   TourInfo @relation("TourInfoToAgeGroup", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Tag {
  id        String   @unique @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToTag", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Duration {
  id        String   @unique @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String   @unique
  tourInfo   TourInfo @relation("TourInfoToDuration", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Special {
  id        String   @unique @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToSpecial", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Image {
  id        String   @unique @default(uuid())
  imageUrl  String
  alt       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToImage", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Itinerary {
  id        String   @unique @default(uuid())
  dayNumber String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToItinerary", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Faq {
  id        String   @unique @default(uuid())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToFaq", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model Review {
  id        String   @unique @default(uuid())
  title     String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  userId     String
  user       User     @relation("UserToReview", fields: [userId], references: [id])
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToReview", fields: [tourInfoId], references: [id])

  @@index([userId])
  @@index([tourInfoId])
}

model Inclusion {
  id        String   @unique @default(uuid())
  type      String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToInclusion", fields: [tourInfoId], references: [id])

  @@index([tourInfoId])
}

model TourGuide {
  id            String   @unique @default(uuid())
  fullname      String   @unique
  about         String
  journey       String
  facebookLink  String
  instagramLink String
  twitterLink   String
  imageUrl      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()
}

model Email {
  id        String   @unique @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Like {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  // Relations
  userId     String
  user       User     @relation("UserToLike", fields: [userId], references: [id])
  tourInfoId String
  tourInfo   TourInfo @relation("TourInfoToLike", fields: [tourInfoId], references: [id])

  @@index([userId])
  @@index([tourInfoId])
}
